<!DOCTYPE html>
<html lang="en" class="[scrollbar-gutter:stable] font-sans">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="csrf-token" content={get_csrf_token()} />
    <.live_title suffix=" Â· Admin Dashboard">
      <%= assigns[:page_title] || "Vibe Needs" %>
    </.live_title>
    <link phx-track-static rel="stylesheet" href={~p"/assets/app.css"} />
    <script defer phx-track-static type="text/javascript" src={~p"/assets/app.js"}>
    </script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <style>
      html { font-family: 'Inter', system-ui, sans-serif; }
    </style>
  </head>
  <body class="min-h-screen bg-white dark:bg-gray-900 transition-colors duration-300">
    <!-- Sticky Topbar -->
    <header class="fixed top-0 left-0 right-0 z-40 h-16 flex items-center justify-between px-6 bg-white/80 dark:bg-gray-900/80 border-b border-gray-200 dark:border-gray-800 backdrop-blur-md shadow-sm">
      <div class="flex items-center space-x-4">
        <span class="text-xl font-bold tracking-tight text-gray-900 dark:text-white">
          Admin Panel
        </span>
      </div>
      <div class="flex items-center space-x-4">
        <!-- Dark/Light Mode Toggle -->
        <button
          id="theme-toggle"
          aria-label="Toggle dark mode"
          class="rounded-full p-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 transition"
        >
          <svg
            id="theme-toggle-light-icon"
            class="w-5 h-5 hidden text-yellow-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 3v1m0 16v1m8.66-13.66l-.71.71M4.05 19.07l-.71.71M21 12h-1M4 12H3m16.66 6.66l-.71-.71M4.05 4.93l-.71-.71M12 5a7 7 0 100 14 7 7 0 000-14z"
            >
            </path>
          </svg>
          <svg
            id="theme-toggle-dark-icon"
            class="w-5 h-5 hidden text-gray-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z"
            >
            </path>
          </svg>
        </button>
        <!-- User/Settings/Logout could go here -->
      </div>
    </header>
    <div class="flex min-h-screen pt-16">
      <!-- Sidebar -->
      <%= HomeWareWeb.Admin.Shared.render_admin_sidebar(assigns) %>
      <!-- Main Content -->
      <main class="flex-1 p-6 md:ml-64">
        <.flash_group flash={@flash} />
        <%= @inner_content %>
      </main>
    </div>
    <script>
      // Enhanced dark mode toggle with localStorage
      document.addEventListener('DOMContentLoaded', function() {
        const html = document.documentElement;
        const toggle = document.getElementById('theme-toggle');
        const lightIcon = document.getElementById('theme-toggle-light-icon');
        const darkIcon = document.getElementById('theme-toggle-dark-icon');
        
        function setTheme(dark) {
          if (dark) {
            html.classList.add('dark');
            darkIcon.classList.remove('hidden');
            lightIcon.classList.add('hidden');
            localStorage.setItem('theme', 'dark');
          } else {
            html.classList.remove('dark');
            lightIcon.classList.remove('hidden');
            darkIcon.classList.add('hidden');
            localStorage.setItem('theme', 'light');
          }
        }
        
        // Initialize theme based on localStorage or system preference
        const userPref = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const shouldUseDark = userPref === 'dark' || (!userPref && systemPrefersDark);
        setTheme(shouldUseDark);
        
        // Add click event listener
        if (toggle) {
          toggle.addEventListener('click', function(e) {
            e.preventDefault();
            const isDark = html.classList.contains('dark');
            setTheme(!isDark);
          });
        }
        
        // Listen for system theme changes
        window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {
          if (!localStorage.getItem('theme')) {
            setTheme(e.matches);
          }
        });
      });
    </script>
  </body>
</html>
